// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneybaseChat.infrastructure.persistence;

#nullable disable

namespace MoneybaseChat.infrastructure.Migrations
{
    [DbContext(typeof(MoneybaseChatContext))]
    [Migration("20250723103619_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MoneybaseChat.domain.entities.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("Seniority")
                        .HasColumnType("int")
                        .HasColumnName("seniority");

                    b.Property<int>("Team")
                        .HasColumnType("int")
                        .HasColumnName("team");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("Team");

                    b.ToTable("agent", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Erica",
                            Seniority = 3,
                            Team = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "James",
                            Seniority = 2,
                            Team = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Michelle",
                            Seniority = 1,
                            Team = 2
                        },
                        new
                        {
                            Id = 4,
                            Name = "Tim",
                            Seniority = 0,
                            Team = 3
                        });
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.ChatRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Agent")
                        .HasColumnType("int")
                        .HasColumnName("agent");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("created_on");

                    b.Property<Guid>("Identifier")
                        .HasColumnType("char(36)")
                        .HasColumnName("identifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<DateTime?>("LastPulse")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("last_pulse");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("Agent");

                    b.HasIndex(new[] { "Identifier" }, "unique_chat_request_identifier")
                        .IsUnique();

                    b.ToTable("chat_request", (string)null);
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Identifier")
                        .HasColumnType("char(36)")
                        .HasColumnName("identifier");

                    b.Property<bool>("IsOverflowTeam")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("is_overflow_team");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<int>("ShiftDurationInMinutes")
                        .HasColumnType("int")
                        .HasColumnName("shift_duration_minutes");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("TIME")
                        .HasColumnName("shift_start_time");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex("Identifier")
                        .IsUnique();

                    b.ToTable("team", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Identifier = new Guid("74f42bf3-376c-4ee2-bfc1-37471f883638"),
                            IsOverflowTeam = false,
                            Name = "Team A",
                            ShiftDurationInMinutes = 480,
                            ShiftStartTime = new TimeSpan(0, 0, 0, 0, 0)
                        },
                        new
                        {
                            Id = 2,
                            Identifier = new Guid("c5a0f4c2-336c-424e-abb3-2aa09e5de3c4"),
                            IsOverflowTeam = false,
                            Name = "Team B",
                            ShiftDurationInMinutes = 480,
                            ShiftStartTime = new TimeSpan(0, 8, 0, 0, 0)
                        },
                        new
                        {
                            Id = 3,
                            Identifier = new Guid("85f3cd9b-b74b-4e39-8f86-51b634ebfc78"),
                            IsOverflowTeam = false,
                            Name = "Team C",
                            ShiftDurationInMinutes = 480,
                            ShiftStartTime = new TimeSpan(0, 16, 0, 0, 0)
                        });
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.Agent", b =>
                {
                    b.HasOne("MoneybaseChat.domain.entities.Team", "TeamNavigation")
                        .WithMany("Agents")
                        .HasForeignKey("Team")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeamNavigation");
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.ChatRequest", b =>
                {
                    b.HasOne("MoneybaseChat.domain.entities.Agent", "AgentNavigation")
                        .WithMany("ChatRequests")
                        .HasForeignKey("Agent");

                    b.Navigation("AgentNavigation");
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.Agent", b =>
                {
                    b.Navigation("ChatRequests");
                });

            modelBuilder.Entity("MoneybaseChat.domain.entities.Team", b =>
                {
                    b.Navigation("Agents");
                });
#pragma warning restore 612, 618
        }
    }
}
